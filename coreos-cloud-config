#cloud-config
#
#
# Set SSH Key
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWa+XZ1VyMbeavkmknMCuXPnOCw3HE6wKO1Z9cayHsyRQu18p0UexUmchODBcB92VoSveD2OXe+2HlqF+iyyaAKEQlTxw/CCppCUig2Nh8XYgdrlJkMbg7t72vu1D1+ZlCjOkh3YJ8/1fKun1Ql0ieFZHMwRcKk2Ll5mrcHcXXIiJVlXrr1tPbLTqFljcMKqiTgaL7NAfxeIfJeweJBBzH/AsC1OjmFu9MpzfxVD3Im73JifALk/MshdYyXxGoOs5SEtQJ8TOPhy6chvv0dI9PeSkrMkwGJRpw77DpATS8c+RIW/yHjXXCO3QtjUjRZ50KHQ63Iq6E3dsEHm0t2dCB j@OfficeDesktop

# This config is meant to be consumed by the config transpiler, which will
# generate the corresponding Ignition config. Do not pass this config directly
# to instances of Container Linux.

storage:
  filesystems:
    - name: storage1
      mount:
        device: /dev/sdb
        format: ext4
        wipe_filesystem: true
systemd:
  units:
    - name: var-lib-docker.mount
      enable: true
      contents: |
        [Unit]
        Description=Mount storage to /var/lib/docker
        Before=local-fs.target
        [Mount]
        What=/dev/sdb
        Where=/var/lib/docker
        Type=ext4
        [Install]
        WantedBy=local-fs.target
    - name: docker.service
      dropins:
        - name: 10-wait-docker.conf
          contents: |
            [Unit]
            After=var-lib-docker.mount
            Requires=var-lib-docker.mount
    - name: mnt-docker.mount
      enable: true
      contents: |
        [Unit]
        Before=remote-fs.target
        [Mount]
        What=192.168.2.12:/volume1/docker
        Where=/mnt/docker
        Options=rw
        Type=nfs
        [Install]
        WantedBy=remote-fs.target
    - name: mnt-media.mount
      enable: true
      contents: |
        [Unit]
        After=mnt-docker.mount
        [Mount]
        What=192.168.2.12:/volume1/Media
        Where=/mnt/media
        Type=nfs
        [Install]
        WantedBy=remote-fs.target
    # - name: install-docker-compose.service
    #   command: start
    #   contents: |
    #     [Unit]
    #     Description=Install docker-compose
    #     ConditionPathExists=!/opt/bin/docker-compose
    #     [Service]
    #     Type=oneshot
    #     RemainAfterExit=yes
    #     ExecStart=/usr/bin/mkdir -p /opt/bin/
    #     ExecStart=/usr/bin/curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` -o /opt/bin/docker-compose
    #     ExecStart=/usr/bin/chmod +x /opt/bin/docker-compose
etcd:
  # Generate a new token for the cluster from https://discovery.etcd.io/new
  discovery: https://discovery.etcd.io/244dd9f184c49967f20cd5a9269139ff
  name: "core01"
